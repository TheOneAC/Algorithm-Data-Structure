/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    // compute the nodes of the subtree whose root is this node
    int count(TreeNode* root){
        if(root == NULL)return 0;
        return count(root->left)+ count(root->right)+1;
    }
    int kthSmallest(TreeNode* root, int k) {
        int l = count(root->left);
        if(l== k-1)return root->val;
        else if(l > k-1) return kthSmallest(root->left, k);
        else return kthSmallest(root->right, k-l-1);
    }
};