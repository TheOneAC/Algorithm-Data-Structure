//
class Solution {
public:
bool valid(string& sub){
    if(sub.size() > 1 && sub[0]  == '0')return false;// deal with pre zero
    stringstream ss;
    int t;
    ss << sub;
    ss >> t;
    if(t < 256)return true;
    else return false;
}
void dfs(string &s, int index, vector<string>&ans,string div,int seg){
    seg++;
    if(seg > 4)return;
    for(int i = 1; i<4 && index + i <= s.size(); i++){
        string sub = s.substr(index,i);
        if(!valid(sub))return;
        string tmp = div + '.' + sub;
        if(index + i == s.size() && seg == 4){
            tmp.erase(tmp.begin());// deal with thr first '.'
            ans.push_back(tmp);
        }
        dfs(s,index+i,ans,tmp,seg);
    }
}
    vector<string> restoreIpAddresses(string s) {
        vector<string> ans;
        string div;
        dfs(s, 0, ans,div,0);
        return ans;
        
    }
};