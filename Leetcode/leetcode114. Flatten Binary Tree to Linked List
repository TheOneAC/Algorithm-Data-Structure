

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root == NULL)return;
        stack<TreeNode* >st;
        st.push(root);
        while(!st.empty()){
            TreeNode* cur = st.top(); st.pop();
            if(cur->right)st.push(cur->right);
            if(cur->left)st.push(cur->left);
            if(!st.empty())cur->right = st.top();
            else cur->right == NULL;
            cur->left = NULL;
        }
        return ;
    }
};


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        TreeNode* cur = root;
        while(cur){
            if(cur->left){
                TreeNode* tmp = cur->left;
                while(tmp->right)tmp = tmp->right;
                tmp->right = cur->right;
                cur->right = cur->left;
                cur->left = NULL;
            }
            cur = cur->right;
        }
        
    }
};
