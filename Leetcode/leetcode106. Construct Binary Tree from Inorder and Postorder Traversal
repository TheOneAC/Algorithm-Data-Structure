/*
 * the same with leetcode105
 */
class Solution {
public:
    TreeNode* buildsubTree(vector<int>& inorder, vector<int>& postorder, int ib, int ie, int pb,int pe){
        if(pb > pe)return NULL;
        int i;
        for(i = ib; i <= ie ;i++)
            if(inorder[i] == postorder[pe])break;
        TreeNode* root = new TreeNode(postorder[pe]);
        root -> left = buildsubTree( inorder,postorder,ib, i-1,pb,     pb+i-1-ib);
        root -> right = buildsubTree(inorder,postorder,i+1,ie, pb+i-ib,pe-1);
        return root;
    } 
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return buildsubTree(inorder,postorder,0,inorder.size()-1,0,postorder.size()-1);
    }
};
