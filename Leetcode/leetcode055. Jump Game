/**
 *  O(n)
 */
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int last = 0;  				 	// current furthest index access
        for(int i = 0;i < nums.size() && last < (nums.size() -1); i++){
            if(i > last)break;   			// arrive at the furthest
            if(i + nums[i] > last)last = i + nums[i];   //update the fuethest
        }
        if(last >= nums.size() - 1)return true;   	 // access to the end
        else return false;
    }
};
