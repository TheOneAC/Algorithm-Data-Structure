/**
 * binary search tree inorder travese is ordered.
 * if find reverse order then false.
 * ba careful about boundary test.
 */


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void intra (TreeNode* root,vector<int> &re){
        if(root == NULL) return;
        intra(root -> left, re);
        re.push_back(root ->val);
        intra(root -> right, re);
    }
    bool isValidBST(TreeNode* root) {
        if (root == NULL)return true;
        vector<int>re;
        intra(root, re);
        for(int i = 0; i<= (int)re.size() -2;i++){
            if(re[i] >= re[i+1]) return false;
        }
        return true;
    }
};
