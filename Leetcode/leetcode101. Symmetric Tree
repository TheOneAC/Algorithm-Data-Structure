/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if((p == NULL && q != NULL)||(p != NULL && q == NULL))return false;
        else if(p == NULL && q == NULL)return true;
        else if(p->val != q->val)return false;
        else return isSameTree(p->left,q->right) && isSameTree(p->right,q->left); 
	 //change in parameter compareing with leetcode100. Same Tree
    }
    bool isSymmetric(TreeNode* root) {
        if(root == NULL || root->left ==NULL && root->right == NULL)return true;
        else if((root->left !=NULL && root->right == NULL) ||(root->left ==NULL && root->right != NULL))return false;
        else if(root->left->val != root->right->val)return false;   // clarity
        else return isSameTree(root ->left,root ->right);
    }
};
